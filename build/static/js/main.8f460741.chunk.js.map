{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","panels/MapBox.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","stretched","size","onClick","Persik","props","left","className","persik","alt","mapboxgl","accessToken","MapBox","mapContainer","useRef","map","useState","setLng","setLat","setZoom","useEffect","current","Map","container","style","center","zoom","geolocate","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","showUserHeading","addControl","on","trigger","get_user_location","getCenter","lng","toFixed","lat","getZoom","ref","App","activePanel","setActivePanel","setUser","setPopout","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8f460741.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Example</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group header={<Header mode=\"secondary\">GoGo miniApp</Header>}>\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<Group header={<Header mode=\"secondary\">App Example</Header>}>\r\n\t\t\t<Div>\r\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"mapbox\">\r\n\t\t\t\t\tShow me mapbox, horny\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst Persik = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; \r\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoidGVwc2xvcmUiLCJhIjoiY2t2M3B5YzhuNGE4bTJvczcxcHl0OGduZyJ9.Wy0faVduOFtH1QVImTdDVQ';\r\n\r\nfunction MapBox(props) {\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(60.68743133544922);\r\n    const [lat, setLat] = useState(56.83428192138672);\r\n    const [zoom, setZoom] = useState(17);\r\n\r\n    useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'https://raw.githubusercontent.com/TepSLore/mapboxStyle/main/mapbox-styles.json',\r\n            center: [88.57615903607801, 61.392013415571995],\r\n            zoom: 5\r\n        });\r\n\r\n        get_user_location();\r\n    });\r\n\r\n    function get_user_location(){\r\n        var geolocate = new mapboxgl.GeolocateControl({\r\n            positionOptions: {\r\n                enableHighAccuracy: true, \r\n            },\r\n            // When active the map will receive updates to the device's location as it changes.\r\n            trackUserLocation: true,\r\n            // Draw an arrow next to the location dot to indicate which direction the device is heading.\r\n            showUserHeading: true\r\n        })\r\n\r\n        map.current.addControl(geolocate);\r\n        map.current.on('load', function() {\r\n            geolocate.trigger(); //<- Automatically activates geolocation\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n    if (!map.current) return; // wait for map to initialize\r\n        map.current.on('move', () => {\r\n            setLng(map.current.getCenter().lng.toFixed(4));\r\n            setLat(map.current.getCenter().lat.toFixed(4));\r\n            setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n    });\r\n    \r\n    return (\r\n        <Panel>\r\n            <PanelHeader id={props.id}\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n            >\r\n\t\t\tMapBox\r\n\t\t    </PanelHeader>\r\n            <div>\r\n                <div ref={mapContainer} className=\"map-container\" />\r\n            </div>\r\n\t    </Panel>\r\n    );\r\n}\r\n\r\nexport default MapBox\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Persik from './panels/Persik';\r\nimport MapBox from \"./panels/MapBox\";\r\n\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\t//popout={popout} вставить в view чтобы крутилось говно\r\n\treturn (\r\n\t\t<AdaptivityProvider>\r\n\t\t\t<AppRoot>\r\n\t\t\t\t<View activePanel={activePanel} > \r\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t\t\t<Persik id='persik' go={go} />\r\n\t\t\t\t\t<MapBox id='mapbox' go={go} />\r\n\t\t\t\t</View>\r\n\t\t\t</AppRoot>\r\n\t\t</AdaptivityProvider>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}